{"ast":null,"code":"import * as signalR from \"@microsoft/signalr\";\nconst connection = new signalR.HubConnectionBuilder().withUrl(\"http://localhost:5000/realtimehub\") // Adjust URL if necessary\n.withAutomaticReconnect() // Automatically attempt to reconnect\n.build();\nconnection.onreconnecting(error => {\n  console.warn(\"SignalR reconnecting due to error:\", error);\n});\nconnection.onreconnected(connectionId => {\n  console.log(\"SignalR reconnected. Connection ID:\", connectionId);\n});\nconnection.onclose(error => {\n  console.error(\"SignalR connection closed:\", error);\n});\nexport default connection;","map":{"version":3,"names":["signalR","connection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","onreconnecting","error","console","warn","onreconnected","connectionId","log","onclose"],"sources":["D:/LES_L6/realtime-ticketing-frontend/src/services/signalRService.ts"],"sourcesContent":["import * as signalR from \"@microsoft/signalr\";\r\n\r\nconst connection = new signalR.HubConnectionBuilder()\r\n  .withUrl(\"http://localhost:5000/realtimehub\") // Adjust URL if necessary\r\n  .withAutomaticReconnect() // Automatically attempt to reconnect\r\n  .build();\r\n\r\nconnection.onreconnecting((error) => {\r\n  console.warn(\"SignalR reconnecting due to error:\", error);\r\n});\r\n\r\nconnection.onreconnected((connectionId) => {\r\n  console.log(\"SignalR reconnected. Connection ID:\", connectionId);\r\n});\r\n\r\nconnection.onclose((error) => {\r\n  console.error(\"SignalR connection closed:\", error);\r\n});\r\n\r\nexport default connection;\r\n"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;AAE7C,MAAMC,UAAU,GAAG,IAAID,OAAO,CAACE,oBAAoB,CAAC,CAAC,CAClDC,OAAO,CAAC,mCAAmC,CAAC,CAAC;AAAA,CAC7CC,sBAAsB,CAAC,CAAC,CAAC;AAAA,CACzBC,KAAK,CAAC,CAAC;AAEVJ,UAAU,CAACK,cAAc,CAAEC,KAAK,IAAK;EACnCC,OAAO,CAACC,IAAI,CAAC,oCAAoC,EAAEF,KAAK,CAAC;AAC3D,CAAC,CAAC;AAEFN,UAAU,CAACS,aAAa,CAAEC,YAAY,IAAK;EACzCH,OAAO,CAACI,GAAG,CAAC,qCAAqC,EAAED,YAAY,CAAC;AAClE,CAAC,CAAC;AAEFV,UAAU,CAACY,OAAO,CAAEN,KAAK,IAAK;EAC5BC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;AACpD,CAAC,CAAC;AAEF,eAAeN,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}